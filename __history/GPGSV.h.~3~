#pragma once

#include <vector>
#include "time.h"

#include "NMEA_Sentence.h"

#include <set>

void checkPRN(int prn);

struct GPGSV:NMEA_Sentence
{


	/* Value indexes */
	enum {
		NMEA_GPGSV_SENTENCES,
		NMEA_GPGSV_SENTENCE_NUMBER,
		NMEA_GPGSV_SATELLITES,
		NMEA_GPGSV_PRN,
		NMEA_GPGSV_ELEVATION,
		NMEA_GPGSV_AZIMUTH,
		NMEA_GPGSV_SNR
	};
	public:
		unsigned int sentences; //Number of sentences for full data
		unsigned int sentence_number; //Current sentence number
		unsigned int satellites; //Number of satellites in view

		struct {
			int prn; //Satellite PRN number
			int elevation; //Elevation, degrees
			int azimuth; //Azimuth, degrees
			int snr; //SNR - higher is better
            bool isWAAS=false;
		} sat[4];


public:
		virtual NMEA_Sentence* parse(char* sentence, int length);
		virtual int _parse(char* value, int val_index);
		virtual std::string printMe();


		void AddToSatList();



		static inline std::set<int> PRNList;

		static void showSatList()
		{
			for (auto itr : PRNList)
			{
				printf("PRN: %d  ", itr);
				checkPRN(itr);
				puts("");
			}
		};

};




